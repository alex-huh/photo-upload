# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  photo-upload

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  RecordPhotoBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 54vv-record-photos
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - http://localhost:5173
            AllowedMethods:
              - PUT
              - GET
              - HEAD
            AllowedHeaders:
              - "*"
            ExposedHeaders:
              - ETag
            MaxAge: 3000


  GenerateUploadUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: generateUploadURL.lambdaHandler
      CodeUri: src/handlers/
      Runtime: nodejs22.x
      Architectures: [x86_64]
      Environment:
        Variables:
          BUCKET_NAME: !Ref RecordPhotoBucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref RecordPhotoBucket
      Events:
        UploadUrlApi:
          Type: Api
          Properties:
            Path: /generate-upload-url
            Method: POST
        UploadUrlOptions:
          Type: Api
          Properties:
            Path: /generate-upload-url
            Method: OPTIONS

  ListPhotosFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: listPhotos.lambdaHandler
      CodeUri: src/handlers/
      Runtime: nodejs22.x
      Architectures: [x86_64]
      Environment:
        Variables:
          BUCKET_NAME: !Ref RecordPhotoBucket
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref RecordPhotoBucket
      Events:
        ListPhotosApi:
          Type: Api
          Properties:
            Path: /list-images
            Method: GET

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint for generating S3 pre-signed upload URLs"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-upload-url"
